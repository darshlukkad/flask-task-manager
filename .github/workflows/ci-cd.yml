name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: pytest -q

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

  deploy_to_local:
    needs: build_and_push
    runs-on: [self-hosted, local-deploy]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull image
        run: |
          IMAGE=ghcr.io/${{ github.repository }}:latest
          docker pull "$IMAGE"
      - name: Replace container
        run: |
          docker stop flask-task-manager || true
          docker rm flask-task-manager || true
          docker run -d --name flask-task-manager --restart unless-stopped -p 5000:5000 ghcr.io/${{ github.repository }}:latest

  deploy_via_ssh:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Check SSH_HOST
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          if [ -z "$SSH_HOST" ]; then
            echo "SSH_HOST not set — skipping"; exit 0; fi
      - uses: actions/checkout@v4
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            IMAGE=ghcr.io/${{ github.repository }}:latest
            docker login ghcr.io -u $GITHUB_ACTOR -p $GITHUB_TOKEN || true
            docker pull "$IMAGE"
            docker stop flask-task-manager || true
            docker rm flask-task-manager || true
            docker run -d --name flask-task-manager --restart unless-stopped -p 5000:5000 "$IMAGE"
name: CI/CD Pipeline

name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest -q

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

  deploy_to_local:
    needs: build_and_push
    runs-on: [self-hosted, local-deploy]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GHCR (on the runner)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image from GHCR
        run: |
          IMAGE=ghcr.io/${{ github.repository }}:latest
          docker pull "$IMAGE"

      - name: Stop and remove existing container (if any)
        run: |
          docker stop flask-task-manager || true
          docker rm flask-task-manager || true

      - name: Run container
        run: |
          IMAGE=ghcr.io/${{ github.repository }}:latest
          docker run -d --name flask-task-manager --restart unless-stopped -p 5000:5000 "$IMAGE"

  deploy_via_ssh:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Check for SSH_HOST secret
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          if [ -z "$SSH_HOST" ]; then
            echo "SSH_HOST secret not set — skipping SSH deploy job.";
            exit 0;
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            IMAGE=ghcr.io/${{ github.repository }}:latest
            echo "Pulling image $IMAGE"
            docker login ghcr.io -u $GITHUB_ACTOR -p $GITHUB_TOKEN || true
            docker pull "$IMAGE"
            docker stop flask-task-manager || true
            docker rm flask-task-manager || true
            docker run -d --name flask-task-manager --restart unless-stopped -p 5000:5000 "$IMAGE"

  deploy_via_ssh:
    needs: build_and_push
    runs-on: ubuntu-latest
    # This job will be skipped if SSH_HOST secret is not set. The check below reads the secret at step-time.
    steps:
      - name: Check for SSH_HOST secret
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          if [ -z "$SSH_HOST" ]; then
            echo "SSH_HOST secret not set — skipping SSH deploy job.";
            exit 0;
          fi

      name: CI/CD Pipeline

      on:
        push:
          branches: [ main ]
        pull_request:
          branches: [ main ]

      jobs:
        test:
          runs-on: ubuntu-latest
          steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.11'

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: Run tests
              run: pytest -q

        build_and_push:
          needs: test
          runs-on: ubuntu-latest
          permissions:
            contents: read
            packages: write
          steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push Docker image to GHCR
              uses: docker/build-push-action@v4
              with:
                context: .
                push: true
                tags: |
                  ghcr.io/${{ github.repository }}:latest
                  ghcr.io/${{ github.repository }}:${{ github.sha }}

        deploy_to_local:
          needs: build_and_push
          # This job is intended to run on a self-hosted runner that is your local machine.
          # Register a self-hosted runner on your machine and label it 'local-deploy'.
          runs-on: [self-hosted, local-deploy]
          if: github.ref == 'refs/heads/main'
          steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Login to GHCR (on the runner)
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Pull image from GHCR
              run: |
                IMAGE=ghcr.io/${{ github.repository }}:latest
                docker pull "$IMAGE"

            - name: Stop and remove existing container (if any)
              run: |
                docker stop flask-task-manager || true
                docker rm flask-task-manager || true

            - name: Run container
              run: |
                IMAGE=ghcr.io/${{ github.repository }}:latest
                docker run -d --name flask-task-manager --restart unless-stopped -p 5000:5000 "$IMAGE"

        deploy_via_ssh:
          needs: build_and_push
          runs-on: ubuntu-latest
          # This job will be skipped if SSH_HOST secret is not set. The check below reads the secret at step-time.
          steps:
            - name: Check for SSH_HOST secret
              env:
                SSH_HOST: ${{ secrets.SSH_HOST }}
              run: |
                if [ -z "$SSH_HOST" ]; then
                  echo "SSH_HOST secret not set — skipping SSH deploy job.";
                  exit 0;
                fi

            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Deploy via SSH
              uses: appleboy/ssh-action@v0.1.8
              with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                key: ${{ secrets.SSH_PRIVATE_KEY }}
                port: ${{ secrets.SSH_PORT }}
                script: |
                  set -e
                  IMAGE=ghcr.io/${{ github.repository }}:latest
                  echo "Pulling image $IMAGE"
                  docker login ghcr.io -u $GITHUB_ACTOR -p $GITHUB_TOKEN || true
                  docker pull "$IMAGE"
                  docker stop flask-task-manager || true
                  docker rm flask-task-manager || true
                  docker run -d --name flask-task-manager --restart unless-stopped -p 5000:5000 "$IMAGE"
